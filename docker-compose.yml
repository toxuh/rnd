version: "3.8"

services:
  app1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nextjs-app1
    restart: unless-stopped
    expose:
      - "3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app1.rule=Host(`rnd.so`)"
      - "traefik.http.routers.app1.entrypoints=websecure"
      - "traefik.http.routers.app1.tls.certresolver=letsencrypt"
      - "traefik.http.services.app1.loadbalancer.server.port=3000"
    environment:
      NODE_ENV: production
      REDIS_URL: redis://redis:6379
      # Security Configuration
      API_KEY_MAIN: ${API_KEY_MAIN:-rnd_prod_main_key_change_me}
      API_KEY_ADMIN: ${API_KEY_ADMIN:-rnd_prod_admin_key_change_me}
      API_KEY_LIMITED: ${API_KEY_LIMITED:-rnd_prod_limited_key_change_me}
      DISABLE_API_KEY_AUTH: ${DISABLE_API_KEY_AUTH:-false}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-https://rnd.so}
      WEBHOOK_SECRET: ${WEBHOOK_SECRET:-prod_webhook_secret_change_me}
      # Rate Limiting
      RATE_LIMIT_GLOBAL_MAX: ${RATE_LIMIT_GLOBAL_MAX:-100}
      RATE_LIMIT_RANDOM_MAX: ${RATE_LIMIT_RANDOM_MAX:-30}
      RATE_LIMIT_STRICT_MAX: ${RATE_LIMIT_STRICT_MAX:-10}
      # Additional Security
      MAX_REQUEST_SIZE: ${MAX_REQUEST_SIZE:-10240}
      ENABLE_REQUEST_LOGGING: ${ENABLE_REQUEST_LOGGING:-true}
      # ESP32 Server
      RND_SERVER_URL: ${RND_SERVER_URL:-http://192.168.1.161}

  redis:
    image: redis:7-alpine
    container_name: redis-app1
    restart: unless-stopped
    expose:
      - "6379"
    volumes:
      - redis-data:/data

volumes:
  redis-data:
